[{"C:\\Users\\arjay\\Desktop\\nwHacks 2021\\main\\bethtchess\\webapp\\src\\index.js":"1","C:\\Users\\arjay\\Desktop\\nwHacks 2021\\main\\bethtchess\\webapp\\src\\components\\Webcam.js":"2","C:\\Users\\arjay\\Desktop\\nwHacks\\bethtchess\\webapp\\src\\index.js":"3","C:\\Users\\arjay\\Desktop\\nwHacks\\bethtchess\\webapp\\src\\components\\Webcam.js":"4","C:\\Users\\arjay\\Desktop\\nwHacks\\bethtchess\\webapp\\src\\App.js":"5","C:\\Users\\arjay\\Desktop\\nwHacks\\bethtchess\\webapp\\src\\reportWebVitals.js":"6","D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\index.js":"7","D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\components\\Webcam.js":"8","D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\components\\Home.js":"9","D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\reportWebVitals.js":"10","D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\App.js":"11","D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\components\\testComponent.js":"12","D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\components\\Bar.js":"13"},{"size":500,"mtime":1608925389197,"results":"14","hashOfConfig":"15"},{"size":1355,"mtime":1610231070106,"results":"16","hashOfConfig":"15"},{"size":517,"mtime":1610238080404,"results":"17","hashOfConfig":"18"},{"size":4881,"mtime":1610261824209,"results":"19","hashOfConfig":"18"},{"size":244,"mtime":1610260134310,"results":"20","hashOfConfig":"18"},{"size":375,"mtime":1610238080404,"results":"21","hashOfConfig":"18"},{"size":517,"mtime":1610238080404,"results":"22","hashOfConfig":"23"},{"size":5224,"mtime":1610297655995,"results":"24","hashOfConfig":"23"},{"size":9258,"mtime":1610302026800,"results":"25","hashOfConfig":"23"},{"size":375,"mtime":1610238080404,"results":"26","hashOfConfig":"23"},{"size":242,"mtime":1610299917380,"results":"27","hashOfConfig":"23"},{"size":351,"mtime":1610294936062,"results":"28","hashOfConfig":"23"},{"size":437,"mtime":1610295286290,"results":"29","hashOfConfig":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vkaluf",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ssvg4",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"17plhbp",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\arjay\\Desktop\\nwHacks 2021\\main\\bethtchess\\webapp\\src\\index.js",[],"C:\\Users\\arjay\\Desktop\\nwHacks 2021\\main\\bethtchess\\webapp\\src\\components\\Webcam.js",["59"],"C:\\Users\\arjay\\Desktop\\nwHacks\\bethtchess\\webapp\\src\\index.js",[],"C:\\Users\\arjay\\Desktop\\nwHacks\\bethtchess\\webapp\\src\\components\\Webcam.js",["60"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport Webcam from \"react-webcam\";\r\nimport 'fomantic-ui/dist/semantic.min.css'\r\n\r\nconst MyComponent = () => {\r\n    const countdown = 3;\r\n\r\n    const webcamRef = useRef( null );\r\n\r\n    const [seconds, setSeconds] = useState( countdown );\r\n    const [isTimerActive, setTimerActive] = useState( false );\r\n\r\n    let id = 0;\r\n\r\n    const capture = useCallback(\r\n        ( path, options ) => {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            const uploadImage = async ( image ) => {\r\n                const formData = new FormData();\r\n                console.log( id )\r\n                if ( id >= 6 ) {\r\n                    id = 0;\r\n                }\r\n                id++;\r\n                //const id = Math.random().toString( 36 ).substr( 2, 9 );\r\n\r\n\r\n                let arr = image.split( ',' ), mime = arr[ 0 ].match( /:(.*?);/ )[ 1 ],\r\n                    bstr = atob( arr[ 1 ] ), n = bstr.length, u8arr = new Uint8Array( n );\r\n                while ( n-- ) {\r\n                    u8arr[ n ] = bstr.charCodeAt( n );\r\n                }\r\n\r\n                const file = new File( [u8arr], id + \".jpg\", { type: mime } );\r\n                formData.append( \"picture\", file );\r\n\r\n                const res = await fetch( \"http://localhost:4000/picture\", {\r\n                    method: \"POST\",\r\n                    body: formData\r\n                } ).then( res => res.json() );\r\n                console.log( JSON.stringify( res ) );\r\n            }\r\n\r\n            uploadImage( imageSrc ).then( r => {\r\n                console.log( r );\r\n            } )\r\n        },\r\n        []\r\n    );\r\n\r\n\r\n    useEffect( () => {\r\n        const intervals = [];\r\n        if ( isTimerActive ) {\r\n            // 3sec timer\r\n            intervals.push( setInterval( () => {\r\n                setSeconds( seconds => seconds - 1 );\r\n            }, 1000 ) );\r\n\r\n            // take pictures\r\n            intervals.push( setInterval( () => {\r\n                capture();\r\n            }, 500 ) );\r\n        } else if ( !isTimerActive && seconds === 0 ) {\r\n            intervals.map( interval => (\r\n                clearInterval( interval )\r\n            ) )\r\n        }\r\n\r\n        if ( seconds === 0 ) {\r\n            setSeconds( countdown );\r\n            setTimerActive( false );\r\n        }\r\n\r\n        return () => (\r\n            intervals.map( interval => (\r\n                clearInterval( interval )\r\n            ) )\r\n        );\r\n    }, [capture, isTimerActive, seconds] );\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"headerSegment\" className=\"ui rounded inverted segment\"\r\n                 style={ {\r\n                     position: 'center',\r\n                     width: '850px',\r\n                     alignItems: 'center',\r\n                     alignSelf: 'center',\r\n                     color: '#204229',\r\n                     display: 'block',\r\n                     marginLeft: 'auto',\r\n                     marginRight: 'auto',\r\n                 } }>\r\n                <h1 className=\"ui header\">\r\n                    BethChess.tech\r\n                </h1>\r\n            </div>\r\n\r\n            <Webcam\r\n                audio={ false }\r\n                ref={ webcamRef }\r\n                screenshotFormat=\"image/jpeg\"\r\n            />\r\n            <div>\r\n                { !isTimerActive ?\r\n                    <button\r\n                        className=\"ui inverted animate teal labeled icon button\"\r\n                        onClick={ () => setTimerActive( !isTimerActive ) }>\r\n                        <i className=\"camera icon\"/>\r\n                        Capture\r\n                    </button> :\r\n                    <button\r\n                        className=\"ui inverted disabled animate teal labeled icon button\">\r\n                        <i className=\"camera icon\"/>\r\n                        { seconds }\r\n                    </button>\r\n                }\r\n            </div>\r\n            <div className=\"row\" style={ { background_color: '#869D05', color: '#FFFFFF' } }>\r\n                <div className=\"column\">\r\n                    {/*{ image && (*/ }\r\n                    {/*    <div>*/ }\r\n                    {/*        <div>*/ }\r\n                    {/*            <button className=\"ui inverted animate green labeled icon button\" onClick={ capture }>*/ }\r\n                    {/*                <i className=\"download icon\"/>*/ }\r\n                    {/*                Analyze*/ }\r\n                    {/*            </button>*/ }\r\n                    {/*        </div>*/ }\r\n                    {/*        <img*/ }\r\n                    {/*            src={ image }*/ }\r\n                    {/*            alt=\"img\"/>*/ }\r\n                    {/*    </div>*/ }\r\n                    {/*) }*/ }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyComponent;\r\n","C:\\Users\\arjay\\Desktop\\nwHacks\\bethtchess\\webapp\\src\\App.js",[],"C:\\Users\\arjay\\Desktop\\nwHacks\\bethtchess\\webapp\\src\\reportWebVitals.js",[],"D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\index.js",[],["61","62"],"D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\components\\Webcam.js",["63"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport Webcam from \"react-webcam\";\r\nimport 'fomantic-ui/dist/semantic.min.css'\r\n\r\nconst MyComponent = () => {\r\n    const countdown = 3;\r\n\r\n    const webcamRef = useRef( null );\r\n\r\n    const [seconds, setSeconds] = useState( countdown );\r\n    const [isTimerActive, setTimerActive] = useState( false );\r\n\r\n    let id = 0;\r\n\r\n    const capture = useCallback(\r\n        ( path, options ) => {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            const uploadImage = async ( image ) => {\r\n                const formData = new FormData();\r\n                console.log( id )\r\n                if ( id >= 6 ) {\r\n                    id = 0;\r\n                }\r\n                id++;\r\n                //const id = Math.random().toString( 36 ).substr( 2, 9 );\r\n\r\n\r\n                let arr = image.split( ',' ), mime = arr[ 0 ].match( /:(.*?);/ )[ 1 ],\r\n                    bstr = atob( arr[ 1 ] ), n = bstr.length, u8arr = new Uint8Array( n );\r\n                while ( n-- ) {\r\n                    u8arr[ n ] = bstr.charCodeAt( n );\r\n                }\r\n\r\n                const file = new File( [u8arr], id + \".jpg\", { type: mime } );\r\n                formData.append( \"picture\", file );\r\n\r\n                const res = await fetch( \"http://localhost:4000/picture\", {\r\n                    method: \"POST\",\r\n                    body: formData\r\n                } ).then( res => res.json() );\r\n                console.log( JSON.stringify( res ) );\r\n\r\n                const response = await fetch( \"http://localhost:4000/analyze\", {\r\n                    method: \"POST\",\r\n                    body: formData\r\n                } ).then( response => response.json() );\r\n                console.log( JSON.stringify( response ) );\r\n            }\r\n\r\n            uploadImage( imageSrc ).then( r => {\r\n                console.log( r );\r\n            } )\r\n        },\r\n        []\r\n    );\r\n\r\n\r\n    useEffect( () => {\r\n        const intervals = [];\r\n        if ( isTimerActive ) {\r\n            // 3sec timer\r\n            intervals.push( setInterval( () => {\r\n                setSeconds( seconds => seconds - 1 );\r\n            }, 1000 ) );\r\n\r\n            // take pictures\r\n            intervals.push( setInterval( () => {\r\n                capture();\r\n            }, 500 ) );\r\n        } else if ( !isTimerActive && seconds === 0 ) {\r\n            intervals.map( interval => (\r\n                clearInterval( interval )\r\n            ) )\r\n        }\r\n\r\n        if ( seconds === 0 ) {\r\n            setSeconds( countdown );\r\n            setTimerActive( false );\r\n        }\r\n\r\n        return () => (\r\n            intervals.map( interval => (\r\n                clearInterval( interval )\r\n            ) )\r\n        );\r\n    }, [capture, isTimerActive, seconds] );\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"headerSegment\" className=\"ui rounded inverted segment\"\r\n                 style={ {\r\n                     position: 'center',\r\n                     width: '850px',\r\n                     alignItems: 'center',\r\n                     alignSelf: 'center',\r\n                     color: '#204229',\r\n                     display: 'block',\r\n                     marginLeft: 'auto',\r\n                     marginRight: 'auto',\r\n                 } }>\r\n                <h1 className=\"ui header\">\r\n                    BethChess.tech\r\n                </h1>\r\n            </div>\r\n\r\n            <Webcam\r\n                audio={ false }\r\n                ref={ webcamRef }\r\n                screenshotFormat=\"image/jpeg\"\r\n            />\r\n            <div>\r\n                { !isTimerActive ?\r\n                    <button\r\n                        className=\"ui inverted animate teal labeled icon button\"\r\n                        onClick={ () => setTimerActive( !isTimerActive ) }>\r\n                        <i className=\"camera icon\"/>\r\n                        Capture\r\n                    </button> :\r\n                    <button\r\n                        className=\"ui inverted disabled animate teal labeled icon button\">\r\n                        <i className=\"camera icon\"/>\r\n                        { seconds }\r\n                    </button>\r\n                }\r\n            </div>\r\n            <div className=\"row\" style={ { background_color: '#869D05', color: '#FFFFFF' } }>\r\n                <div className=\"column\">\r\n                    {/*{ image && (*/ }\r\n                    {/*    <div>*/ }\r\n                    {/*        <div>*/ }\r\n                    {/*            <button className=\"ui inverted animate green labeled icon button\" onClick={ capture }>*/ }\r\n                    {/*                <i className=\"download icon\"/>*/ }\r\n                    {/*                Analyze*/ }\r\n                    {/*            </button>*/ }\r\n                    {/*        </div>*/ }\r\n                    {/*        <img*/ }\r\n                    {/*            src={ image }*/ }\r\n                    {/*            alt=\"img\"/>*/ }\r\n                    {/*    </div>*/ }\r\n                    {/*) }*/ }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyComponent;\r\n","D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\components\\Home.js",["64"],"D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\reportWebVitals.js",[],"D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\App.js",[],"D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\components\\testComponent.js",[],"D:\\arjay\\Documents\\Personal projects\\Reactjs\\bethtchess\\webapp\\src\\components\\Bar.js",[],{"ruleId":"65","severity":1,"message":"66","line":5,"column":7,"nodeType":"67","messageId":"68","endLine":5,"endColumn":23},{"ruleId":"69","severity":1,"message":"70","line":22,"column":26,"nodeType":"71","endLine":22,"endColumn":27},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"69","severity":1,"message":"70","line":22,"column":26,"nodeType":"71","endLine":22,"endColumn":27},{"ruleId":"65","severity":1,"message":"76","line":97,"column":11,"nodeType":"67","messageId":"68","endLine":97,"endColumn":26},"no-unused-vars","'videoConstraints' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'id' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","Literal","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"'checkPermission' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]